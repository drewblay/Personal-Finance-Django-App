{"version":3,"file":"autoload.min.js","sources":["../../src/js/Ink/Autoload/1/lib.js"],"names":["Ink","createModule","Selector","InkArray","Loaded","Scroller","Close","Drawer","validSelector","sel","select","el","e","error","document","createElement","Autoload","selectors","Animate_1","Carousel_1","DatePicker_1","DragDrop_1","Draggable_1","Dropdown_1","Droppable_1.add","FormValidator_2","Gallery_1","LazyLoad_1","Modal_1","ProgressBar_1","SortableList_1","Spy_1","Stacker_1","Sticky_1","Table_1","Tabs_1","Toggle_1","Tooltip_1","TreeView_1","defaultOptions","run","parentEl","options","findElements","mod","fname","test","split","modName","elements","filter","autoloadElement","length","requireModules","Component","forEach","getInstance","element","forceAutoload","getAttribute","extendObj","hasOwnProperty","createClose","createSmoothScroller","init","createDrawer","matchesSelector","body","add","moduleName","selector","remove","k","window","INK_NO_AUTO_LOAD","firstRunDone"],"mappings":"AAKAA,IAAIC,aAAa,eAAgB,GAAI,qBAAsB,mBAAoB,mBAAoB,0BAA2B,iBAAkB,mBAAoB,SAAUC,EAAUC,EAAUC,EAAQC,EAAUC,EAAOC,GACvN,YASA,SAASC,GAAcC,GACnB,IACIP,EAASQ,OAAOD,EAAKE,GACvB,MAAMC,GAEJ,MADAZ,KAAIa,MAAMD,IACH,EAEX,OAAO,EATX,GAAID,GAAKG,SAASC,cAAc,OAY5BC,GAOAC,WAGIC,UAAkB,eAClBC,WAAkB,gBAClBC,aAAkB,kBAClBC,WAAkB,gBAClBC,YAAkB,iBAClBC,WAAkB,gBAClBC,kBAAoB,iBACpBC,gBAAoB,qBACpBC,UAAkB,wBAClBC,WAAkB,gBAClBC,QAAkB,aAClBC,cAAkB,oBAClBC,eAAkB,qBAClBC,MAAkB,oBAClBC,UAAkB,eAClBC,SAAkB,uBAClBC,QAAkB,aAClBC,OAAkB,YAClBC,SAAkB,uBAClBC,UAAkB,yBAClBC,WAAkB,kBAEtBC,kBAkBAC,IAAK,SAAUC,EAAUC,GA2BrB,QAASC,GAAaC,GAClB,GAAIC,EACA,MAAKC,KAAKF,KACVA,EAAMA,EAAIG,MAAM,KAChBF,EAAQD,EAAI,GACZA,EAAMA,EAAI,GAEd,IAAII,GAAU,UAAYJ,EACtBK,EAAW/C,EAASQ,OAAQgC,EAAQzB,UAAU2B,GAAMH,EAExDQ,GAAW9C,EAAS+C,OAAOD,EAAUE,GAEjCF,EAASG,QACTpD,IAAIqD,gBAAiBL,GAAU,SAAUM,GACrCnD,EAASoD,QAAQN,EAAU,SAAUtC,IACI,kBAA1B2C,GAAUE,aACgB,MAA7BF,EAAUE,YAAY7C,MAGzBkC,EAGDS,EAAUT,GAAOlC,EAAIK,EAASuB,eAAeK,IAF7C,GAAIU,GAAU3C,EAAIK,EAASuB,eAAeK,SAS9D,QAASO,GAAgBM,GACrB,MAAIf,GAAQgB,iBAAkB,GAAe,EACT,kBAAzBD,GAAQE,cAA+D,gBAAzBF,GAAQE,aACZ,UAA1CF,EAAQE,aAAa,iBADhC,OAzDJjB,EAAU1C,IAAI4D,WAMV3C,UAAWD,EAASC,WACrByB,MAEH,KAAI,GAAIE,KAAOF,GAAQzB,UAAeyB,EAAQzB,UAAU4C,eAAejB,IAEnED,EAAaC,EAEbF,GAAQoB,eAAgB,GACxB,GAAIxD,GAEJoC,EAAQqB,wBAAyB,GACjC1D,EAAS2D,OAETtB,EAAQuB,gBAAiB,KACrB/D,EAASgE,gBAAgBpD,SAASqD,KAAM,gBAClC5D,EAAOiD,aAAejD,EAAOiD,YAAY1C,SAASqD,OACxD,GAAI5D,GAAOO,SAASqD,QAgDhCC,IAAK,SAAUC,EAAYC,GACvB,MAAK9D,GAAc8D,QAEftD,EAASC,UAAUoD,GACnBrD,EAASC,UAAUoD,IAAe,KAAOC,EAEzCtD,EAASC,UAAUoD,GAAcC,IALE,GAe3CC,OAAQ,SAAUF,SACPrD,GAASC,UAAUoD,IAIlC,KAAK,GAAIG,KAAKxD,GAASC,UAAeD,EAASC,UAAU4C,eAAeW,KACpExD,EAASuB,eAAeiC,MAa5B,OAVKC,QAAOC,kBACRtE,EAAOoC,IAAI,WACPxB,EAASwB,IAAI1B,UACTiD,sBAAsB,EACtBD,aAAa,IAEjB9C,EAAS2D,cAAe,IAIzB3D","sourcesContent":["/** \n * @module Ink.Autoload\n * @version 1\n * Create Ink UI components easily\n */\nInk.createModule('Ink.Autoload', 1, ['Ink.Dom.Selector_1', 'Ink.Util.Array_1', 'Ink.Dom.Loaded_1', 'Ink.UI.SmoothScroller_1', 'Ink.UI.Close_1', 'Ink.UI.Drawer_1'], function( Selector, InkArray, Loaded, Scroller, Close, Drawer ){\n    'use strict';\n\n    /**\n     * @namespace Ink.Autoload\n     * @static\n     */\n\n    var el = document.createElement('div');\n    // See if a selector is valid.\n    function validSelector(sel) {\n        try {\n            Selector.select(sel, el);\n        } catch(e) {\n            Ink.error(e);\n            return false;\n        }\n        return true;\n    }\n\n    var Autoload = {\n        /**\n         * Matches module names to default selectors.\n         * \n         * @property selectors {Object}\n         * @public\n         **/\n        selectors: {\n            /* Match module names to element classes (or more complex selectors)\n             * which get the UI modules instantiated automatically. */\n            'Animate_1'     : '.ink-animate',\n            'Carousel_1'    : '.ink-carousel',\n            'DatePicker_1'  : '.ink-datepicker',\n            'DragDrop_1'    : '.ink-dragdrop',\n            'Draggable_1'   : '.ink-draggable',\n            'Dropdown_1'    : '.ink-dropdown',\n            'Droppable_1.add' : '.ink-droppable',\n            'FormValidator_2' : '.ink-formvalidator',\n            'Gallery_1'     : 'ul.ink-gallery-source',\n            'LazyLoad_1'    : '.ink-lazyload',\n            'Modal_1'       : '.ink-modal',\n            'ProgressBar_1' : '.ink-progress-bar',\n            'SortableList_1': '.ink-sortable-list',\n            'Spy_1'         : '[data-spy=\"true\"]',\n            'Stacker_1'     : '.ink-stacker',\n            'Sticky_1'      : '.ink-sticky, .sticky',\n            'Table_1'       : '.ink-table',\n            'Tabs_1'        : '.ink-tabs',\n            'Toggle_1'      : '.ink-toggle, .toggle',\n            'Tooltip_1'     : '.ink-tooltip, .tooltip',\n            'TreeView_1'    : '.ink-tree-view'\n        },\n        defaultOptions: {},\n\n        /**\n         * Run Autoload on a specific element.\n         *\n         * Useful when you load something from AJAX and want it to have automatically loaded Ink modules.\n         * @method run\n         * @param {Element} parentEl Root element. The children of this element will be processed by Autoload.\n         * @param {Object}  [options] Options object, containing:\n         * @param {Boolean} [options.forceAutoload] Autoload things on elements even if they have `data-autoload=\"false\"`\n         * @param {Boolean} [options.createClose] Whether to create the Ink.UI.Close component. Defaults to `true`.\n         * @param {Boolean} [options.createSmoothScroller] Whether to create the Scroller component. Defaults to `true`.\n         * @param {Object} [options.selectors=Ink.Autoload.selectors] A hash mapping module names to selectors that match elements to load these modules. For example, `{ 'Modal_1': '.my-specific-modal' }`.\n         * @param {Boolean} [options.waitForDOMLoaded=false] Do nothing until the DOM is loaded. Uses Ink.Dom.Loaded.run();\n         * @return {void}\n         * @public\n         * @sample Autoload_1.html\n         **/\n        run: function (parentEl, options){\n            options = Ink.extendObj({\n                // The below lines are not required because undefined is falsy anyway..\n                // forceAutoload: false,\n                // waitForDOMLoaded: false,\n                // createClose: false,\n                // createSmoothScroller: false,\n                selectors: Autoload.selectors\n            }, options || {});\n\n            for(var mod in options.selectors) if (options.selectors.hasOwnProperty(mod)) {\n                // `elements` need to be in a closure because requireModules is async.\n                findElements(mod);\n            }\n            if (options.createClose !== false) {\n                new Close();\n            }\n            if (options.createSmoothScroller !== false) {\n                Scroller.init();\n            }\n            if (options.createDrawer !== false) {\n                if (Selector.matchesSelector(document.body, '.ink-drawer') &&\n                        !(Drawer.getInstance && Drawer.getInstance(document.body))) {\n                    new Drawer(document.body);\n                }\n            }\n\n            function findElements(mod) {\n                var fname;\n                if (/\\./.test(mod)) {  // Droppable.add(elm, options)\n                    mod = mod.split('.');\n                    fname = mod[1];\n                    mod = mod[0];\n                }\n                var modName = 'Ink.UI.' + mod;\n                var elements = Selector.select( options.selectors[mod], parentEl );\n\n                elements = InkArray.filter(elements, autoloadElement);\n\n                if( elements.length ){\n                    Ink.requireModules( [modName], function( Component ) {\n                        InkArray.forEach(elements, function (el) {\n                            if (typeof Component.getInstance === 'function' &&\n                                    Component.getInstance(el) != null) {\n                                return; // Avoid multiple instantiation.\n                            }\n                            if (!fname) {\n                                new Component(el, Autoload.defaultOptions[mod]);\n                            } else {\n                                Component[fname](el, Autoload.defaultOptions[mod]);\n                            }\n                        });\n                    });\n                }\n            }\n\n            function autoloadElement(element) {\n                if (options.forceAutoload === true) { return true; }\n                if (typeof element.getAttribute === 'function' || typeof element.getAttribute === 'object') {\n                    return element.getAttribute('data-autoload') !== 'false';\n                }\n            }\n        },\n        /**\n         * Add a new entry to be autoloaded.\n         * @method add\n         * @param {String} moduleName The module name (Example: 'Modal_1', or 'Dropdown_1')\n         * @param {String} selector   A selector which finds elements where this module should be autoloaded (Example: '.my-modal' or '.my-dropdown')\n         * @return {void}\n         * @public\n         */\n        add: function (moduleName, selector) {\n            if (!validSelector(selector)) { return false; }\n\n            if (Autoload.selectors[moduleName]) {\n                Autoload.selectors[moduleName] += ', ' + selector;\n            } else {\n                Autoload.selectors[moduleName] = selector;\n            }\n        },\n        /**\n         * Removes a module from autoload, making it not be automatically loaded.\n         * @method remove\n         * @param {String} moduleName The module's name and version ('Name_ver')\n         * @return {void}\n         * @public\n         **/\n        remove: function (moduleName) {\n            delete Autoload.selectors[moduleName];\n        }\n    };\n\n    for (var k in Autoload.selectors) if (Autoload.selectors.hasOwnProperty(k)) {\n        Autoload.defaultOptions[k] = {};\n    }\n\n    if (!window.INK_NO_AUTO_LOAD) {\n        Loaded.run(function () {\n            Autoload.run(document, {\n                createSmoothScroller: true,\n                createClose: true\n            });\n            Autoload.firstRunDone = true;\n        });\n    }\n\n    return Autoload;\n});\n\n"]}